from __future__ import print_function

import sys
import requests
import getpass

try:
    # With authentication: up to 5000 requests per hour.
    print("user:", file=sys.stderr)
    user = raw_input()
    passwd = getpass.getpass()
    auth = (user, passwd)
except IndexError:
    # Without authentication: up to 60 requests per hour.
    auth = None


max_contributors = 20
row_size = 5


def group(it, size):
    gr = []
    for ele in it:
        gr.append(ele)
        if len(gr) == size:
            yield gr
            gr = []
    if len(gr) != 0:
        yield gr


def get_contributors():
    return requests.get("https://api.github.com/repos/scikit-learn/scikit-learn"
                        "/contributors?anon=1", auth=auth).json()


def get_profile(login):
    return requests.get("https://api.github.com/users/%s" % login,
                        auth=auth).json()


contributors = get_contributors()[:max_contributors]

print(".. raw :: html\n")

print("    <!-- Generated by gen_authors.py -->")
print("    <table>")
for row in group(contributors, size=row_size):
    print("    <tr>")
    for contributor in row:
        print("    <td>")

        if contributor["type"] == "Anonymous":
            print("    <p>", contributor["name"].encode("utf8"), "</p>")
        else:
            login = contributor["login"].encode("ascii")
            profile = get_profile(login)

            if profile["name"] is not None:
                name = profile["name"].encode("utf8")
            else:
                name = login

            print("    <a href='%s'><img src='%s' class='avatar' /></a> <br />" % \
                    (profile["html_url"], profile["avatar_url"]))
            print("    <p>%s</p>" % name)

        print("    </td>")
    print("    </tr>")
print("    </table>")
