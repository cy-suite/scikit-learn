name: CUDA GPU
on:
  workflow_dispatch:
    inputs:
      pr_id:
        description: Test the contents of this Pull Request
        required: true

permissions: read-all

jobs:
  tests:
    runs-on:
      group: cuda-gpu-runner-group
    name: Run Array API unit tests
    steps:
      - uses: actions/setup-python@v5
        with:
          # XXX: The 3.12.4 release of Python on GitHub Actions is corrupted:
          # https://github.com/actions/setup-python/issues/886
          python-version: '3.12.3'
      - name: Get PR Info
        id: pr
        env:
          PR_NUMBER: ${{ inputs.pr_id }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          REPO_UPDATE_AT: ${{ github.event.repository.updated_at }}
        run: |
          pr="$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/${GH_REPO}/pulls/${PR_NUMBER})"
          head_sha="$(echo "$pr" | jq -r .head.sha)"
          updated_at="$(echo "$pr" | jq -r .updated_at)"

          # Check that the PR was not updated since the start of the workflow
          # to protect against timed commit attacks.
          if [[ $(date -d $updated_at) > $(date -d $REPO_UPDATE_AT) ]]; exit 1; fi

          echo "head_sha=$head_sha" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.head_sha }}
      - name: Cache conda environment
        id: cache-conda
        uses: actions/cache@v4
        with:
          path: ~/conda
          key: ${{ runner.os }}-build-${{ hashFiles('build_tools/github/create_gpu_environment.sh') }}-${{ hashFiles('build_tools/github/pylatest_conda_forge_cuda_array-api_linux-64_conda.lock') }}
      - name: Install miniforge
        if: ${{ steps.cache-conda.outputs.cache-hit != 'true' }}
        run: bash build_tools/github/create_gpu_environment.sh
      - name: Install scikit-learn
        run: |
          source "${HOME}/conda/etc/profile.d/conda.sh"
          conda activate sklearn
          pip install --verbose --no-build-isolation --config-settings editable-verbose=true --editable .
      - name: Run array API tests
        run: |
          source "${HOME}/conda/etc/profile.d/conda.sh"
          conda activate sklearn
          pytest -k 'array_api'
