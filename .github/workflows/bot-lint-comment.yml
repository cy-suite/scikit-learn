# This action is triggered when the linter (lint.yml) workflow is completed.
# It will download the artifact (the lint log) from that job, parse it,
# and create a comment based on it.
# This is done this way so that the action has permissions to write comments
# on PRs.
name: Comment on failed linting

on:
  workflow_run:
    workflows: ["linter"]
    types:
      - completed

jobs:
  comment:
    if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      # This step is needed to get the pull request number used the last step.
      - name: "Get information about the origin 'CI' run"
        uses: potiuk/get-workflow-origin@v1_5
        id: source-run-info
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: lint-log

      - name: Show Logs
        id: show-logs
        run: cat linting_output.txt

      - name: Get comments
        id: get-comments
        # This step "fails" with exit code 1 if no comments are to be posted.
        # Therefore the next step wouldn't run.
        run: python ./build_tools/get_comment.py > comments.txt

      - name: Comment on pull request
        uses: actions/github-script@v6
        with:
            github-token: ${{secrets.GITHUB_TOKEN}}
            script: |
              const fs = require('fs');
              const message = fs.readFileSync('comments.txt', 'utf8');
              github.rest.issues.createComment({
                  issue_number: '${{ steps.source-run-info.outputs.pullRequestNumber }}',
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: message,
              })
